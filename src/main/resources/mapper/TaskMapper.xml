<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dicadut.soms.mapper.TaskMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.dicadut.soms.domain.Task">
        <id column="id" property="id"/>
        <result column="task_type" property="taskType"/>
        <result column="task_status" property="taskStatus"/>
        <result column="creator_id" property="creatorId"/>
        <result column="user_id" property="userId"/>
        <result column="component_id" property="componentId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="begin_time" property="beginTime"/>
        <result column="end_time" property="endTime"/>
        <result column="is_temporary" property="isTemporary"/>
        <result column="is_deleted" property="isDeleted"/>
    </resultMap>

<!--    <select id="selectCount" resultType="java.lang.Integer">-->
<!--        select count(*)-->
<!--        from system.task;-->
<!--    </select>-->

    <select id="selectCountByTaskStatus" resultType="java.lang.Integer">
        select count(*)
        from system.task t
        where t.create_time between #{startTime} and #{endTime}
        <if test="taskStatus != null">
            and t.task_status = #{taskStatus}
        </if>
    </select>

    <select id="selectTaskStatisticByTaskStatus" resultType="com.dicadut.soms.dto.TaskStatisticDTO">
        select
        count(*) total_count,
        sum(if(t.task_status = 1002000001,1,0)) wait_4_received_count,
        sum(if(t.task_status = 1002000003,1,0)) wait_4_reviewed_count,
        sum(if(t.task_status = 1002000005,1,0)) wait_4_retransmitted_count,
        sum(if(t.task_status = 1002000002,1,0)) inspecting_count
        from system.task t
        where t.create_time between #{startTime} and #{endTime}
    </select>

    <select id="selectTaskStatisticAppByTaskStatus" resultType="com.dicadut.soms.dto.TaskStatisticAppDTO">
        select
            count(*) total_count,
            sum(if(t.task_status = 1002000006,1,0)) finish_count
        from system.task t
        where t.create_time between #{startTime} and #{endTime}
    </select>


    <select id="selectInspectorList" resultType="com.dicadut.soms.dto.InspectorDTO">
        select
            u.real_name AS `name`,
            t.id task_id,t.start_time AS startTime,t.end_time AS endTime,t.task_status AS taskStatus,
            u.id,t.id,GROUP_CONCAT(c.name) AS inspectingContent
        from system.user u left outer join system.t_task t on u.id = t.inspector_id
                           left outer join system.t_task_bridge_component tc on t.id = tc.task_id
                           left outer join system.t_component c on tc.bridge_component_id = c.id
        where u.duty = 2
        group by u.id,t.id
    </select>

    <select id="selectTaskAppList" resultType="com.dicadut.soms.dto.TaskAppListDTO">
        select
            t.`code`,t.bridge_storey AS bridgeStorey,t.stake_begin AS stakeBegin,t.stake_end AS stakeEnd,
               t.code_name AS taskDetail,t.end_time AS deadTime,
               c.name AS componentName
        from system.task t JOIN system.task_component tc on t.id = tc.task_id
                           JOIN system.component c on tc.component_id = c.id
        where (t.task_status,c.Inspection_frequency) = (#{taskStatus}, #{inspectionFrequency})
    </select>

    <select id="selectTaskDetails" resultType="com.dicadut.soms.dto.TaskDetailsDTO">
        select
            t.code_name AS taskSummary,
            t.ramp,
            t.stake_begin AS stakeBegin,t.stake_end AS stakeEnd,
            GROUP_CONCAT(c.`name`) AS componentName
        from system.task t JOIN system.task_component tc on t.id = tc.task_id
                           JOIN system.component c on tc.component_id = c.id
        where t.id = #{taskId}
    </select>

    <select id="selectTaskStatusLatestList" resultType="com.dicadut.soms.dto.TaskDTO">
        select d.code id, d.code_name name, count(t.task_status) value
        from system.t_dictionary d
            left join system.task t  on t.task_status = d.`code`
        where d.code in ('1002000001','1002000002','1002000003','1002000005')
        group by d.code;
    </select>

    <select id="getAmendingTaskListByPage" resultType="com.dicadut.soms.dto.AmendingTaskDTO">
        SELECT DISTINCT t.id taskId,dd.code_name taskType,t.start_time startTime, t.end_time endTime,CONCAT(b.location,
            cc.`name`) inspectionPosition,u.real_name inspectorName,d.code_name taskStatus
        FROM system.t_task t
                 LEFT JOIN system.`user` u ON t.inspector_id = u.id
                 LEFT JOIN system.t_task_bridge_component tc ON t.id = tc.task_id
                 LEFT JOIN system.t_bridge_info_component bc ON tc.bridge_component_id = bc.id
                 LEFT JOIN system.t_component c ON bc.component_id = c.id
                 LEFT JOIN system.t_component cc ON c.parent_id = cc.id
                 LEFT JOIN system.t_bridge_info b ON b.id=bc.bridge_info_id
                 LEFT JOIN system.t_dictionary d ON t.task_status = d.`code`
                 LEFT JOIN system.t_dictionary dd ON t.task_type =dd.`code`
        WHERE t.task_status IN (1002000004,1002000007,1002000008)
        group by t.id
    </select>

    <select id="getAmendingTaskListByePageQuery" resultType="com.dicadut.soms.dto.AmendingTaskDTO">
        SELECT DISTINCT t.id taskId,dd.code_name taskType,t.start_time startTime, t.end_time endTime,CONCAT(b.location,
                                                                                                            cc.`name`) inspectionPosition,u.real_name inspectorName,d.code_name taskStatus
        FROM system.t_task t
                 LEFT JOIN system.`user` u ON t.inspector_id = u.id
                 LEFT JOIN system.t_task_bridge_component tc ON t.id = tc.task_id
                 LEFT JOIN system.t_bridge_info_component bc ON tc.bridge_component_id = bc.id
                 LEFT JOIN system.t_component c ON bc.component_id = c.id
                 LEFT JOIN system.t_component cc ON c.parent_id = cc.id
                 LEFT JOIN system.t_bridge_info b ON b.id=bc.bridge_info_id
                 LEFT JOIN system.t_dictionary d ON t.task_status = d.`code`
                 LEFT JOIN system.t_dictionary dd ON t.task_type =dd.`code`
        WHERE t.task_status = #{query.taskStatus} AND t.task_type= #{query.taskType}
        group by t.id
    </select>

    <select id="getAmendingTaskListByPageType" resultType="com.dicadut.soms.dto.AmendingTaskDTO">
        SELECT DISTINCT t.id taskId,dd.code_name taskType,t.start_time startTime, t.end_time endTime,CONCAT(b.location,
                                                                                                            cc.`name`) inspectionPosition,u.real_name inspectorName,d.code_name taskStatus
        FROM system.t_task t
                 LEFT JOIN system.`user` u ON t.inspector_id = u.id
                 LEFT JOIN system.t_task_bridge_component tc ON t.id = tc.task_id
                 LEFT JOIN system.t_bridge_info_component bc ON tc.bridge_component_id = bc.id
                 LEFT JOIN system.t_component c ON bc.component_id = c.id
                 LEFT JOIN system.t_component cc ON c.parent_id = cc.id
                 LEFT JOIN system.t_bridge_info b ON b.id=bc.bridge_info_id
                 LEFT JOIN system.t_dictionary d ON t.task_status = d.`code`
                 LEFT JOIN system.t_dictionary dd ON t.task_type =dd.`code`
        WHERE t.task_status IN (1002000004,1002000007,1002000008) AND t.task_type= #{type}
        group by t.id
    </select>

    <select id="getAmendingTaskListByPageStatus" resultType="com.dicadut.soms.dto.AmendingTaskDTO">
        SELECT DISTINCT t.id taskId,dd.code_name taskType,t.start_time startTime, t.end_time endTime,CONCAT(b.location,
                                                                                                            cc.`name`) inspectionPosition,u.real_name inspectorName,d.code_name taskStatus
        FROM system.t_task t
                 LEFT JOIN system.`user` u ON t.inspector_id = u.id
                 LEFT JOIN system.t_task_bridge_component tc ON t.id = tc.task_id
                 LEFT JOIN system.t_bridge_info_component bc ON tc.bridge_component_id = bc.id
                 LEFT JOIN system.t_component c ON bc.component_id = c.id
                 LEFT JOIN system.t_component cc ON c.parent_id = cc.id
                 LEFT JOIN system.t_bridge_info b ON b.id=bc.bridge_info_id
                 LEFT JOIN system.t_dictionary d ON t.task_status = d.`code`
                 LEFT JOIN system.t_dictionary dd ON t.task_type =dd.`code`
        WHERE t.task_status= #{status}
        group by t.id
    </select>

    <insert id="addTask" parameterType="com.dicadut.soms.vo.TaskVO">
        INSERT INTO system.t_task(`id`,`task_type`,`task_status`,`start_time`,`end_time`,`receive_time`,`recall_time`,`create_by`)
        values(#{taskId},#{taskVO.taskType},'1002000004',#{taskVO.startTime},#{taskVO.endTime},#{taskVO.receiveTime},#{taskVO.recallTime},#{taskVO.createBy});
    </insert>

    <insert id="addTaskComponent" parameterType="java.util.ArrayList">
        INSERT INTO system.t_task_bridge_component(t_task_bridge_component.`task_id`,t_task_bridge_component.`bridge_component_id`) values
        <foreach collection="list" item="item" index="index" separator=",">
        (#{taskId},#{item.id})
        </foreach>
    </insert>

    <update id="addInspectorToTask" parameterType="com.dicadut.soms.domain.Task">
        update system.t_task t
        set t.inspector_id =#{userId},t.task_status ='1002000001'
        where t.id=#{taskId}
     </update>
</mapper>
