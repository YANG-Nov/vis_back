<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dut.visualization.mapper.DiseaseMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.dut.visualization.domain.Disease">
        <id column="id" property="id"/>
        <result column="disease_id" property="diseaseId"/>
        <result column="task_id" property="taskId"/>
        <result column="specific_component_id" property="specificComponentId"/>
        <result column="model_code" property="modelCode"/>
        <result column="disease_code" property="diseaseCode"/>
        <result column="x" property="x"/>
        <result column="y" property="y"/>
        <result column="z" property="z"/>
        <result column="degree" property="degree"/>
        <result column="is_repair" property="isRepair"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <select id="selectDiseaseLocationList" resultType="com.dut.visualization.dto.DiseaseLocationDTO">
        SELECT
                sdi1.disease_code,
                ANY_VALUE(sdi1.create_time) as create_time,
                ANY_VALUE(sdi1.x) as x,
                ANY_VALUE(sdi1.y) as y,
                ANY_VALUE(sdi1.z) as z,
                ANY_VALUE(sdi1.degree) as degree,
                ANY_VALUE(sdi1.model_code) as model_code,
                ANY_VALUE(sdi1.is_repair) as is_repair
        FROM vis_specific_disease_info sdi1
                     INNER JOIN(SELECT sdi2.disease_code, max(sdi2.create_time) AS create_time FROM vis_specific_disease_info sdi2 WHERE sdi2.is_deleted = 0 AND sdi2.create_time between #{startTime} and #{endTime} GROUP BY sdi2.disease_code) AS sdi3
                ON sdi1.disease_code = sdi3.disease_code AND sdi1.create_time = sdi3.create_time

        GROUP BY sdi1.disease_code
    </select>

    <select id="selectDiseaseTypeList" resultType="com.dut.visualization.dto.DiseaseTypeDTO">
        SELECT
                d.parent_name as name,
                ANY_VALUE(COUNT(d.parent_name)) as value
        FROM vis_specific_disease_info sdi1
                INNER JOIN(SELECT sdi2.disease_code, max(sdi2.create_time) AS create_time FROM vis_specific_disease_info sdi2 WHERE sdi2.is_deleted = 0 AND sdi2.create_time between #{startTime} and #{endTime} GROUP BY sdi2.disease_code) AS sdi3
        ON sdi1.disease_code = sdi3.disease_code AND sdi1.create_time = sdi3.create_time
                LEFT JOIN vis_disease d on sdi1.disease_id = d.id
        where sdi1.is_repair = 0
        GROUP BY d.parent_name
    </select>

    <select id="selectDiseaseZtTimeList" resultType="com.dut.visualization.dto.DiseaseZtTimeDTO1">
        SELECT
                sdi.disease_code,
                sdi.is_repair,
                sdi.create_time
        FROM
                vis_specific_disease_info sdi
                        LEFT JOIN vis_disease d on sdi.disease_id = d.id
        WHERE
                d.parent_id = '20001'
          AND
                sdi.create_time BETWEEN #{startTime} and #{endTime}
          AND
                sdi.is_deleted = 0
        ORDER BY ANY_VALUE(sdi.create_time)
    </select>
</mapper>